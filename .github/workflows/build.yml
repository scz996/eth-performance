name: Build and Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 步骤1：检出代码仓库
      - name: Checkout repository
        uses: actions/checkout@v2

      # 步骤2：设置 JDK 版本
      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      # 步骤3：构建项目
      - name: Build with Maven
        run: mvn package

      # 步骤4：上传构建产物
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: target/ethStats.jar

      # 步骤5：更新 Release
      - name: Update Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          OWNER=${{ github.repository_owner }}
          REPO=${{ github.repository }}
          TAG=v1.0.0  # 要更新的标签名称
          RELEASE_NAME=v1.0.0  # 更新后的 Release 名称
          RELEASE_BODY="Your updated release notes."  # 更新后的 Release 描述
          ASSET_PATH=target/ethStats.jar  # JAR 文件路径
          ASSET_NAME=ethStats.jar  # JAR 文件名

          # 获取已发布的 Release 的 ID
          RELEASE_ID=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            https://api.github.com/repos/$OWNER/$REPO/releases/tags/$TAG \
            | jq -r '.id')

          if [ -z "$RELEASE_ID" ]; then
            echo "Release '$TAG' not found."
            exit 1
          fi

          # 上传 JAR 文件
          UPLOAD_URL="https://uploads.github.com/repos/$OWNER/$REPO/releases/$RELEASE_ID/assets?name=$ASSET_NAME"
          UPLOAD_RESPONSE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            -H "Content-Type: application/java-archive" \
            --data-binary "@$ASSET_PATH" \
            "$UPLOAD_URL")

          # 更新 Release 的名称和描述
          curl -s -X PATCH -H "Authorization: token $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
              "tag_name": "'$TAG'",
              "name": "'$RELEASE_NAME'",
              "body": "'$RELEASE_BODY'"
            }' \
            "https://api.github.com/repos/$OWNER/$REPO/releases/$RELEASE_ID"
